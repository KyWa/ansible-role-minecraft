---
- name: Install Java - RPM Systems
  dnf:
    name: "java-{{ minecraft_java_version }}-openjdk"
    state: installed
  when: ansible_pkg_mgr == "dnf" or ansible_pkg_mgr == "yum"

- name: Install Java - DPKG Systems
  apt:
    name: "openjdk-{{ minecraft_java_version }}-jre-headless"
    state: installed
  when: ansible_pkg_mgr == "apt"

- name: PREP - Verify jq exists
  block:
    - name: PREP - Check if jq exists on server
      command: "command -v jq"
  rescue:
    - name: PREP - Download jq
      uri:
        url: https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
        dest: /usr/bin/jq
        mode: 0755
  tags: jq

- name: Check if a server.jar exists already
  stat: 
    path: "{{ minecraft_directory}}/server.jar"
  register: jar_exists

- name: JAR - Grabbing specified version of Minecraft Server
  shell: |
    curl -o {{ minecraft_directory }}/server.jar \
    $(curl `curl -sL https://launchermeta.mojang.com/mc/game/version_manifest.json | \
    jq -r '.versions[] | select (.id == "{{ minecraft_version }}") | .url'` | jq -r '.downloads.server.url')
  when: minecraft_version != "latest" and minecraft_upgrade == false

- name: JAR - Grabbing latest version of Minecraft Server
  shell: |
    curl -o {{ minecraft_directory }}/server.jar \
    $(curl `curl -sL https://launchermeta.mojang.com/mc/game/version_manifest.json | \
    jq -r '.latest.release as $release | .versions[] | select(.id == $release) | .url'` | jq -r '.downloads.server.url')
  when: jar_exists.stat.exists != true or minecraft_upgrade == true

- name: JAR - Set owner of server.jar
  file:
    path: "{{ minecraft_directory }}/server.jar"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_group }}"
